syntax = "proto3";

package grps.protos.v1;

import "grps.proto";

option cc_enable_arenas = true;
option cc_generic_services = true;

service GrpsBrpcService {
  rpc Predict(GrpsMessage) returns (GrpsMessage) {};
  rpc PredictByHttp(EmptyGrpsMessage) returns (EmptyGrpsMessage) {};
  rpc Online(GrpsMessage) returns (GrpsMessage) {};
  rpc Offline(GrpsMessage) returns (GrpsMessage) {};
  rpc CheckLiveness(GrpsMessage) returns (GrpsMessage) {};
  rpc CheckReadiness(GrpsMessage) returns (GrpsMessage) {};
  rpc ServerMetadata(GrpsMessage) returns (GrpsMessage) {}; // get server metadata
  rpc ModelMetadata(GrpsMessage) returns (GrpsMessage) {}; // get one model metadata
}

service MonitorService {
  rpc Metrics(EmptyGrpsMessage) returns (EmptyGrpsMessage) {}; // monitor metrics show web page
  rpc SeriesData(EmptyGrpsMessage) returns (EmptyGrpsMessage) {}; // get monitor series data of one metrics
}

service JsService {
  rpc JqueryMinJs(EmptyGrpsMessage) returns (EmptyGrpsMessage) {}; // get jquery_min.js
  rpc FloatMinJs(EmptyGrpsMessage) returns (EmptyGrpsMessage) {}; // get float_min.js
}